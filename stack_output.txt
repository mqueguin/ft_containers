CONSTRUCTOR TEST
size of first: 0
size of second: 0
size of third: 2

EMPTY TEST
Push 1 in stack
Push 2 in stack
Push 3 in stack
Push 4 in stack
Push 5 in stack
Push 6 in stack
Push 7 in stack
Push 8 in stack
Push 9 in stack
Push 10 in stack
Pop 10 from stack
Pop 9 from stack
Pop 8 from stack
Pop 7 from stack
Pop 6 from stack
Pop 5 from stack
Pop 4 from stack
Pop 3 from stack
Pop 2 from stack
Pop 1 from stack
sum of all values from stack: 55

SIZE TEST
0. size with 0 elements: 0
1. size with 1 elements: 1
1. size with 2 elements: 2
1. size with 3 elements: 3
1. size with 4 elements: 4
1. size with 5 elements: 5
2. size with 4 elements: 4

TOP TEST
Push 10 in stack
Push 20 in stack
Remove 5 from top of stack
top() is now 15

PUSH TEST
Push 0 in stack
Push 1 in stack
Push 2 in stack
Push 3 in stack
Push 4 in stack
Popping out elements...Popping: 4
Popping: 3
Popping: 2
Popping: 1
Popping: 0
Size of stack: 0

POP TEST
Push 0 in stack
Push 1 in stack
Push 2 in stack
Push 3 in stack
Push 4 in stack
Push 5 in stack
Push 6 in stack
Push 7 in stack
Push 8 in stack
Push 9 in stack
Push 10 in stack
Push 11 in stack
Push 12 in stack
Push 13 in stack
Popping: 13
Popping: 12
Popping: 11
Popping: 10
Popping: 9
Popping: 8
Popping: 7
Popping: 6
Popping: 5
Popping: 4
Popping: 3
Popping: 2
Popping: 1
Popping: 0
Size of stack: 0

RELATIONAL OPERATORS TEST
Push 10, 20, 30 in stack a
Push 10, 20, 30 in stack b
Push 30, 20, 10 in stack c
Test == operator: 
a and b are equal
Test != operator: 
b and c are not equal
Test < operator: 
b is less than c
Test > operator: 
c is greater than b
Test <= operator: 
a is less than or equal to b
Test >= operator: 
a is greater than or equal to b
