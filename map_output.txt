CONSTRUCTORS TESTS
Create a map with default constructor
Map contains: 
a => 10
b => 30
c => 50
d => 70
Create a second map with range constructor
Second map contains: 
a => 10
b => 30
c => 50
d => 70
Create a third map with copy constructor
Third map contains: 
a => 10
b => 30
c => 50
d => 70
Create a fourth map with a comparison function
Fourth map contains: 
Fifth map contains: 
Size of first map: 4
Size of second map: 4
Size of third map: 4
Size of fourth map: 0
Size of fifth map: 0

OPERATOR= TESTS
Create a map with default constructor
Map contains: 
x => 100
y => 200
z => 300
Create a second map with overload operator=
Second map contains: 
x => 100
y => 200
z => 300
Size of first map: 3
Size of second map: 3

ITERATORS TESTS: BEGIN()
Create a map and assign 3 elements
Map contains: 
a => 10
b => 120
c => -96
First element of the map: a => 10
Size of the map: 3
Max size of the map: 230584300921369395

ITERATORS TESTS: END()
Create a map and assign some elements
Map contains: 
a => 8
b => 96
c => -128
Last element of the map: c => -128
Size of the map: 3
Max size of the map: 230584300921369395

ITERATORS TESTS: RBEGIN()
Create a map and assign some elements
Map contains: 
c => -128
b => 96
a => 8
First element of the map: c => -128
Size of the map: 3
Max size of the map: 230584300921369395

ITERATORS TESTS: REND()
Create a map and assign some elements
Map contains: 
c => -128
b => 96
a => 8
Last element of the map: a => 8
Size of the map: 3
Max size of the map: 230584300921369395

CAPACITY TESTS: EMPTY()
Create a map and assign some elements
Map contains: 
c => 45
d => -121
e => -107
f => -65
g => 61
Is the map empty? 0
Size of the map: 5
Max size of the map: 230584300921369395
Erase all elements of the map
Is the map empty? 1
Size of the map: 0
Max size of the map: 230584300921369395

CAPACITY TESTS: SIZE()
Create a map and assign some elements
Map contains: 
a => 22
b => 66
c => -58
d => 82
Size of the map: 4
Max size of the map: 230584300921369395
Erase the second element of the map
Map contains: 
a => 22
c => -58
d => 82
Size of the map: 3
Max size of the map: 230584300921369395
Erase all elements of the map
Size of the map: 0
Max size of the map: 230584300921369395

CAPACITY TESTS: MAX_SIZE()
Assign 1000 elements in the vector
The map contains 1000 elements
Max size of the map: 230584300921369395
Size of the map: 256

ELEMENT ACCESS TESTS: OPERATOR[]
Assign 5 elements in the map
Map contains: 
a => an element
b => another element
c => yet another element
d => an element
e => yet another element
map['a'] = an element
map['b'] = another element
map['c'] = yet another element
map['d'] = an element
map['e'] = yet another element
Map contains 5 elements

ELEMENT ACCESS TESTS: AT()
Map contains: 
five => 50
four => 40
one => 10
three => 30
two => 20
Map contains 5 elements
Modif three element with at()
Map contains: 
five => 50
four => 40
one => 10
three => 42
two => 20
Map contains 5 elements
Map max size: 128102389400760775

MODIFIERS TESTS: INSERT()
Insert with single parameter: pair()
Map contains: 
one => 20
three => 30
two => 10
Create a return value
Check the value of ret
Element 'two' already existed
with a value of 10
Map contains: 
one => 20
three => 30
two => 10
Map contains 3 elements
Insert with a position hint
Map contains: 
five => 50
four => 40
one => 20
three => 30
two => 10
Map contains 5 elements
Size of map: 5
Insert with range
Map contains: 
five => 50
four => 40
one => 20
Size of map: 3
Map max size: 128102389400760775

MODIFIERS TESTS: ERASE()
Insert 8 elements
Map contains: 
a => 10
b => 20
c => 30
d => 40
e => 50
f => 60
g => 70
h => 80
Map contains 8 elements
Find the second element and erase it
Erase third element by key
Map contains: 
a => 10
d => 40
e => 50
f => 60
g => 70
h => 80
Map contains 6 elements
Erase some elements by range
Map contains: 
a => 10
d => 40
Map contains 2 elements
Max size of map: 230584300921369395

MODIFIERS TESTS: SWAP()
Insert 3 elements in first map
Insert 5 elements in second map
First map contains: 
x => 100
y => 200
z => 300
Second map contains: 
a => 11
b => 22
c => 33
d => 44
e => 55
Swap maps
First map contains: 
a => 11
b => 22
c => 33
d => 44
e => 55
Second map contains: 
x => 100
y => 200
z => 300
Size of first map: 5
Size of second map: 3

MODIFIERS TESTS: CLEAR()
Insert 3 elements in map
Map contains: 
a => 10
b => 20
c => 30
Map contains 3 elements
Clear map
Map contains 0 elements
Add new elements
Map contains: 
x => 100
y => 200
Size of map: 2
Max size of map: 230584300921369395

OBSERVERS TESTS: KEY_COMP()
Create key compare object
Insert elements in map
Map contains: 
a => 100
b => 200
c => 300
Recover the last element value in map
a => 100
b => 200
c => 300

OPERATIONS TESTS: FIND()
Insert elements in map
Map contains: 
a => 50
b => 100
c => 150
d => 200
Find element with key 'b'
Element found: b => 100
Erase this element
Map contains: 
a => 50
c => 150
d => 200
Size of map: 3
Max size of map: 230584300921369395

